---
# pvcd cluster configuration
# {{ ansible_managed }}
pvc:
  node: {% for node in pvc_nodes if node.hostname == ansible_hostname %}{{ node.hostname }}{% endfor %}

  debug: False
  functions:
    enable_hypervisor: True
    enable_networking: True
    enable_storage: True
    enable_api: True
  cluster:
    coordinators:
{% for node in pvc_nodes if node.is_coordinator %}
      - {{ node.hostname }}
{% endfor %}
    networks:
      upstream:
        domain: {{ pvc_upstream_domain }}
        network: {{ pvc_upstream_subnet }}/{{ pvc_upstream_netmask }}
        floating_ip: {{ pvc_upstream_floatingip }}/{{ pvc_upstream_netmask }}
        gateway: {{ pvc_upstream_gatewayip }}
      cluster:
        domain: {{ pvc_cluster_domain }}
        network: {{ pvc_cluster_subnet }}/{{ pvc_cluster_netmask }}
        floating_ip: {{ pvc_cluster_floatingip }}/{{ pvc_cluster_netmask }}
      storage:
        domain: {{ pvc_storage_domain }}
        network: {{ pvc_storage_subnet }}/{{ pvc_storage_netmask }}
        floating_ip: {{ pvc_storage_floatingip }}/{{ pvc_storage_netmask }}
  coordinator:
    dns:
      database:
        host: localhost
        port: 5432
        name: {{ pvc_dns_database_name }}
        user: {{ pvc_dns_database_user }}
        pass: {{ pvc_dns_database_password }}
    metadata:
      database:
        host: localhost
        port: 5432
        name: {{ pvc_prov_database_name }}
        user: {{ pvc_prov_database_user }}
        pass: {{ pvc_prov_database_password }}
  system:
    intervals:
      keepalive_interval: 5
      fence_intervals: 6
      suicide_intervals: 0
    fencing:
      actions:
        successful_fence: migrate
        failed_fence: None
      ipmi:
        host: {% for node in pvc_nodes if node.hostname == ansible_hostname %}{{ node.ipmi_host }}{% endfor %}

        user: {% for node in pvc_nodes if node.hostname == ansible_hostname %}{{ node.ipmi_user }}{% endfor %}

        pass: {% for node in pvc_nodes if node.hostname == ansible_hostname %}{{ node.ipmi_password }}{% endfor %}

    migration:
      target_selector: mem
    configuration:
      directories:
        dynamic_directory: "/run/pvc"
        log_directory: "/var/log/pvc"
        console_log_directory: "/var/log/libvirt"
      logging:
        file_logging: {{ pvc_log_to_file }}
        stdout_logging: {{ pvc_log_to_stdout }}
        log_colours: {{ pvc_log_colours }}
        log_dates: {{ pvc_log_dates }}
        log_keepalives: {{ pvc_log_keepalives }}
        log_keepalive_cluster_details: {{ pvc_log_keepalive_cluster_details }}
        log_keepalive_storage_details: {{ pvc_log_keepalive_storage_details }}
        console_log_lines: {{ pvc_log_console_lines }}
      networking:
        upstream:
          device: {{ pvc_upstream_device }}
          mtu: {{ pvc_upstream_mtu }}
          address: {% for node in pvc_nodes if node.hostname == ansible_hostname %}{{ node.upstream_ip }}/{{ pvc_upstream_netmask }}{% endfor %}

        cluster:
          device: {{ pvc_cluster_device }}
          mtu: {{ pvc_cluster_mtu }}
          address: {% for node in pvc_nodes if node.hostname == ansible_hostname %}{{ node.cluster_ip }}/{{ pvc_cluster_netmask }}{% endfor %}

        storage:
          device: {{ pvc_storage_device }}
          mtu: {{ pvc_storage_mtu }}
          address: {% for node in pvc_nodes if node.hostname == ansible_hostname %}{{ node.storage_ip }}/{{ pvc_storage_netmask }}{% endfor %}

